{"version":3,"sources":["components/error-boundary/error-boundary.component.tsx","redux/movies-data/movies-data.slice.ts","constants.ts","redux/movies-table/movies-table.slice.ts","redux/pagination/pagination.slice.ts","redux/hooks.ts","components/movies-table/movies-table.component.tsx","components/pagination/pagination.component.tsx","containers/App/App.tsx","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["ErrorBoundary","props","state","hasError","this","bgColor","height","src","alt","maxWidth","textAlign","color","fontWeight","fontSize","children","error","React","Component","fetchMoviesData","createAsyncThunk","page","thunkAPI","a","fetch","response","json","moviesJSON","status","rejectWithValue","Error","data","moviesSlice","createSlice","name","initialState","movies","isLoading","totalCountOfMovies","reducers","changeMovies","action","payload","appendComment","movieId","content","movie","find","id","comments","push","length","localStorage","setItem","toString","JSON","stringify","deleteComment","commentId","filter","comment","extraReducers","builder","addCase","fulfilled","map","parse","getItem","movie_count","rejected","pending","actions","moviesTableSlice","selectedMovieId","commentInputText","changeSelectedMovieId","changeCommentInputText","paginationSlice","currentPage","changeCurrentPage","useAppDispatch","useDispatch","useAppSelector","useSelector","useMoviesData","dispatch","moviesData","moviesFetchError","addComment","removeComment","MoviesTable","useDisclosure","isOpen","onOpen","onClose","useMediaQuery","isGreaterThan920","moviesTable","setSelectedMovieId","setCommentInputText","text","useMoviesTable","selectedMovie","variant","minWidth","index","borderTop","maxHeight","d","justifyContent","medium_cover_image","title","width","genres","join","synopsis","alignItems","onClick","isCentered","spacing","overflowY","className","borderWidth","borderRadius","overflow","padding","Delete","cursor","placeholder","marginRight","value","onChange","event","target","colorScheme","mr","trim","Pagination","handlePageChange","lastPage","Math","ceil","previousPage","nextPage","margin","ArrowBack","ArrowForward","App","pagination","setCurrentPage","usePagination","useCallback","useFetchMoviesData","useEffect","minHeight","size","store","configureStore","reducer","moviesDataReducer","paginationReducer","moviesTableReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec22deb3.chunk.js","sourcesContent":["import { Image } from \"@chakra-ui/image\";\r\nimport { Box, Center, Text } from \"@chakra-ui/layout\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Center bgColor=\"#EFEDFA\" height=\"100vh\">\r\n          <Box>\r\n            <Image src=\"/error.png\" alt=\"Ice Cream\" maxWidth=\"25rem\" />\r\n            <Text\r\n              textAlign=\"center\"\r\n              color=\"#9b8875\"\r\n              fontWeight={600}\r\n              fontSize=\"1.5rem\"\r\n            >\r\n              An unexpected error occurred. We'll fix it soon.\r\n            </Text>\r\n          </Box>\r\n        </Center>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { ROWS_IN_PAGE_LIMIT } from \"../../constants\";\r\nimport Movie from \"../../interfaces/Movie\";\r\nimport MovieWithoutComments from \"../../interfaces/MovieWithoutComments\";\r\n\r\nexport interface MoviesState {\r\n  movies: Movie[];\r\n  isLoading: \"idle\" | \"loading\";\r\n  totalCountOfMovies: number;\r\n  error?: Error;\r\n}\r\n\r\nconst initialState: MoviesState = {\r\n  movies: [],\r\n  isLoading: \"idle\",\r\n  totalCountOfMovies: 0,\r\n};\r\n\r\ninterface MoviesData {\r\n  movie_count: number;\r\n  movies: MovieWithoutComments[];\r\n}\r\n\r\nexport const fetchMoviesData = createAsyncThunk<\r\n  MoviesData,\r\n  number,\r\n  { rejectValue: Error }\r\n>(\"movies/fetchMoviesDataStatus\", async (page: number, thunkAPI) => {\r\n  const response = await fetch(\r\n    `https://yts.mx/api/v2/list_movies.json?limit=${ROWS_IN_PAGE_LIMIT}&page=${page}`\r\n  );\r\n  const moviesJSON = await response.json();\r\n  if (moviesJSON.status !== \"ok\")\r\n    return thunkAPI.rejectWithValue(\r\n      new Error(\"Error occured while movies was fetched.\")\r\n    );\r\n  return moviesJSON.data as MoviesData;\r\n});\r\n\r\nconst moviesSlice = createSlice({\r\n  name: \"movies\",\r\n  initialState,\r\n  reducers: {\r\n    changeMovies: (state, action: PayloadAction<Movie[]>) => {\r\n      state.movies = action.payload;\r\n    },\r\n    appendComment: (\r\n      state,\r\n      action: PayloadAction<{ movieId: number; content: string }>\r\n    ) => {\r\n      const { movieId, content } = action.payload;\r\n      const movie = state.movies.find((movie) => movie.id === movieId);\r\n      if (!movie) return;\r\n      movie.comments.push({\r\n        id: (movie.comments[movie.comments.length - 1]?.id || 0) + 1,\r\n        content,\r\n      });\r\n      localStorage.setItem(movieId.toString(), JSON.stringify(movie.comments));\r\n    },\r\n    deleteComment: (\r\n      state,\r\n      action: PayloadAction<{ movieId: number; commentId: number }>\r\n    ) => {\r\n      const { movieId, commentId } = action.payload;\r\n      const movie = state.movies.find((movie) => movie.id === movieId);\r\n      if (!movie) return;\r\n      movie.comments = movie.comments.filter(\r\n        (comment) => comment.id !== commentId\r\n      );\r\n      localStorage.setItem(movieId.toString(), JSON.stringify(movie.comments));\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchMoviesData.fulfilled, (state, { payload }) => {\r\n      state.isLoading = \"idle\";\r\n      state.movies = payload.movies.map((movie) => {\r\n        const comments = JSON.parse(\r\n          localStorage.getItem(movie.id.toString()) || \"[]\"\r\n        );\r\n        return { ...movie, comments };\r\n      });\r\n      state.totalCountOfMovies = payload.movie_count;\r\n    });\r\n\r\n    builder.addCase(fetchMoviesData.rejected, (state, { payload }) => {\r\n      state.isLoading = \"idle\";\r\n      state.error = payload;\r\n    });\r\n\r\n    builder.addCase(fetchMoviesData.pending, (state) => {\r\n      state.isLoading = \"loading\";\r\n    });\r\n  },\r\n});\r\n\r\nexport const { appendComment, deleteComment } = moviesSlice.actions;\r\nexport default moviesSlice.reducer;\r\n","export const ROWS_IN_PAGE_LIMIT = 10;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface MovieTableState {\r\n  selectedMovieId: number;\r\n  commentInputText: string;\r\n}\r\n\r\nconst initialState: MovieTableState = {\r\n  selectedMovieId: -1,\r\n  commentInputText: \"\",\r\n};\r\n\r\nconst moviesTableSlice = createSlice({\r\n  name: \"moviesTable\",\r\n  initialState,\r\n  reducers: {\r\n    changeSelectedMovieId: (state, action: PayloadAction<number>) => {\r\n      state.selectedMovieId = action.payload;\r\n    },\r\n    changeCommentInputText: (state, action: PayloadAction<string>) => {\r\n      state.commentInputText = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeSelectedMovieId, changeCommentInputText } =\r\n  moviesTableSlice.actions;\r\nexport default moviesTableSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface PaginationState {\r\n  currentPage: number;\r\n}\r\n\r\nconst initialState: PaginationState = {\r\n  currentPage: 1,\r\n};\r\n\r\nconst paginationSlice = createSlice({\r\n  name: \"pagination\",\r\n  initialState,\r\n  reducers: {\r\n    changeCurrentPage: (state, action: PayloadAction<number>) => {\r\n      state.currentPage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeCurrentPage } = paginationSlice.actions;\r\nexport default paginationSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  appendComment,\r\n  deleteComment,\r\n  fetchMoviesData,\r\n} from \"./movies-data/movies-data.slice\";\r\nimport {\r\n  changeCommentInputText,\r\n  changeSelectedMovieId,\r\n} from \"./movies-table/movies-table.slice\";\r\nimport { changeCurrentPage } from \"./pagination/pagination.slice\";\r\nimport { AppDispatch, RootState } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport const useMoviesData = () => {\r\n  const dispatch = useAppDispatch();\r\n  const movies = useAppSelector((state) => state.moviesData.movies);\r\n  const isLoading = useAppSelector((state) => state.moviesData.isLoading);\r\n  const totalCountOfMovies = useAppSelector(\r\n    (state) => state.moviesData.totalCountOfMovies\r\n  );\r\n  const moviesFetchError = useAppSelector((state) => state.moviesData.error);\r\n\r\n  const addComment = (movieId: number, content: string) => {\r\n    dispatch(appendComment({ movieId, content }));\r\n  };\r\n\r\n  const removeComment = (movieId: number, commentId: number) => {\r\n    dispatch(deleteComment({ movieId, commentId }));\r\n  };\r\n\r\n  return {\r\n    movies,\r\n    isLoading,\r\n    totalCountOfMovies,\r\n    moviesFetchError,\r\n    addComment,\r\n    removeComment,\r\n  };\r\n};\r\n\r\nexport const useFetchMoviesData = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const fetchMovies = async (page: number) => {\r\n    await dispatch(fetchMoviesData(page));\r\n  };\r\n\r\n  return fetchMovies;\r\n};\r\n\r\nexport const usePagination = () => {\r\n  const dispatch = useAppDispatch();\r\n  const currentPage = useAppSelector((state) => state.pagination.currentPage);\r\n\r\n  const setCurrentPage = (page: number) => {\r\n    dispatch(changeCurrentPage(page));\r\n  };\r\n\r\n  return {\r\n    currentPage,\r\n    setCurrentPage,\r\n  };\r\n};\r\n\r\nexport const useMoviesTable = () => {\r\n  const dispatch = useAppDispatch();\r\n  const selectedMovieId = useAppSelector(\r\n    (state) => state.moviesTable.selectedMovieId\r\n  );\r\n  const commentInputText = useAppSelector(\r\n    (state) => state.moviesTable.commentInputText\r\n  );\r\n\r\n  const setSelectedMovieId = (id: number) => {\r\n    dispatch(changeSelectedMovieId(id));\r\n  };\r\n\r\n  const setCommentInputText = (text: string) => {\r\n    dispatch(changeCommentInputText(text));\r\n  };\r\n\r\n  return {\r\n    selectedMovieId,\r\n    commentInputText,\r\n    setSelectedMovieId,\r\n    setCommentInputText,\r\n  };\r\n};\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Flex, Text, VStack } from \"@chakra-ui/layout\";\r\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/table\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport Movie from \"../../interfaces/Movie\";\r\nimport { useMoviesData, useMoviesTable } from \"../../redux/hooks\";\r\nimport \"./movies-table.styles.css\";\r\n\r\ninterface MoviesTableProps {\r\n  movies: Movie[];\r\n}\r\n\r\nconst MoviesTable = ({ movies }: MoviesTableProps) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [isGreaterThan920] = useMediaQuery(\"(min-width: 920px)\");\r\n  const { addComment, removeComment } = useMoviesData();\r\n  const {\r\n    selectedMovieId,\r\n    setSelectedMovieId,\r\n    commentInputText,\r\n    setCommentInputText,\r\n  } = useMoviesTable();\r\n  const handleCommentsShow = (id: number) => {\r\n    setSelectedMovieId(id);\r\n    onOpen();\r\n  };\r\n  const selectedMovie = movies.find((movie) => movie.id === selectedMovieId);\r\n  const handleCommentAdd = () => {\r\n    if (commentInputText.trim() === \"\") return;\r\n    addComment(selectedMovieId, commentInputText);\r\n    setCommentInputText(\"\");\r\n  };\r\n  const handleCommentDelete = (commentId: number) => {\r\n    removeComment(selectedMovieId, commentId);\r\n  };\r\n  return (\r\n    <>\r\n      <Table variant=\"simple\">\r\n        {isGreaterThan920 && (\r\n          <Thead>\r\n            <Tr>\r\n              <Th minWidth=\"16rem\">Poster</Th>\r\n              <Th minWidth=\"10rem\">Title</Th>\r\n              <Th>Genres</Th>\r\n              <Th minWidth=\"13rem\">Synopsis</Th>\r\n              <Th>Comments</Th>\r\n            </Tr>\r\n          </Thead>\r\n        )}\r\n        <Tbody>\r\n          {movies.map((movie, index) => {\r\n            return (\r\n              <Tr\r\n                key={movie.id}\r\n                borderTop={index !== 0 ? \"1px solid #7b7b7b\" : \"none\"}\r\n              >\r\n                <Td\r\n                  maxHeight=\"19rem\"\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Poster</Text>}\r\n                  <Image\r\n                    src={movie.medium_cover_image}\r\n                    alt={movie.title}\r\n                    width=\"11rem\"\r\n                  />\r\n                </Td>\r\n                <Td\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Title</Text>}\r\n                  <Text>{movie.title}</Text>\r\n                </Td>\r\n                <Td\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Genres</Text>}\r\n                  <Text maxWidth={isGreaterThan920 ? \"100%\" : \"70%\"}>\r\n                    {movie.genres.join(\", \")}\r\n                  </Text>\r\n                </Td>\r\n                <Td\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Synopsis</Text>}\r\n                  <Text\r\n                    maxWidth={isGreaterThan920 ? \"90%\" : \"70%\"}\r\n                    textAlign=\"justify\"\r\n                  >\r\n                    {movie.synopsis}\r\n                  </Text>\r\n                </Td>\r\n                <Td\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Comments</Text>}\r\n                  <Button onClick={() => handleCommentsShow(movie.id)}>\r\n                    Show\r\n                  </Button>\r\n                </Td>\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Comments</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <VStack\r\n              spacing={2}\r\n              maxHeight=\"60vh\"\r\n              overflowY=\"scroll\"\r\n              className=\"scroll-stack\"\r\n            >\r\n              {selectedMovie?.comments.map((comment) => {\r\n                return (\r\n                  <Flex\r\n                    key={comment.id}\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"hidden\"\r\n                    padding=\"1rem\"\r\n                    width=\"95%\"\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Text>{comment.content}</Text>\r\n                    <DeleteIcon\r\n                      cursor=\"pointer\"\r\n                      onClick={() => handleCommentDelete(comment.id)}\r\n                    />\r\n                  </Flex>\r\n                );\r\n              })}\r\n            </VStack>\r\n            {selectedMovie?.comments.length === 0 && (\r\n              <Text textAlign=\"center\">Comment first!</Text>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Textarea\r\n              placeholder=\"Type your comment here...\"\r\n              marginRight=\"1rem\"\r\n              value={commentInputText}\r\n              onChange={(event) => setCommentInputText(event.target.value)}\r\n            />\r\n            <Button colorScheme=\"teal\" mr={3} onClick={handleCommentAdd}>\r\n              Send\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesTable;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { ArrowBackIcon, ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { HStack } from \"@chakra-ui/layout\";\r\nimport { ROWS_IN_PAGE_LIMIT } from \"../../constants\";\r\n\r\ninterface PaginationProps {\r\n  currentPage: number;\r\n  totalCountOfMovies: number;\r\n  handlePageChange: (page: number) => void;\r\n}\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalCountOfMovies,\r\n  handlePageChange,\r\n}: PaginationProps) => {\r\n  const FIRST_PAGE = 1;\r\n  const lastPage = Math.ceil(totalCountOfMovies / ROWS_IN_PAGE_LIMIT);\r\n  const previousPage = currentPage - 1;\r\n  const nextPage = currentPage + 1;\r\n  return (\r\n    <HStack spacing={2} margin=\"0.5rem\">\r\n      <Button onClick={() => currentPage > 1 && handlePageChange(previousPage)}>\r\n        <ArrowBackIcon />\r\n      </Button>\r\n      {currentPage > 1 && (\r\n        <Button onClick={() => handlePageChange(FIRST_PAGE)}>\r\n          {FIRST_PAGE}\r\n        </Button>\r\n      )}\r\n      {currentPage > 2 && (\r\n        <Button onClick={() => handlePageChange(previousPage)}>\r\n          {previousPage}\r\n        </Button>\r\n      )}\r\n      <Button onClick={() => handlePageChange(currentPage)} colorScheme=\"teal\">\r\n        {currentPage}\r\n      </Button>\r\n      {currentPage < lastPage - 1 && (\r\n        <Button onClick={() => handlePageChange(nextPage)}>{nextPage}</Button>\r\n      )}\r\n      {currentPage < lastPage && (\r\n        <Button onClick={() => handlePageChange(lastPage)}>{lastPage}</Button>\r\n      )}\r\n      <Button\r\n        onClick={() => currentPage < lastPage - 1 && handlePageChange(nextPage)}\r\n      >\r\n        <ArrowForwardIcon />\r\n      </Button>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { Alert, AlertIcon } from \"@chakra-ui/alert\";\nimport { Box, Center, VStack } from \"@chakra-ui/layout\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { useCallback, useEffect } from \"react\";\nimport ErrorBoundary from \"../../components/error-boundary/error-boundary.component\";\nimport MoviesTable from \"../../components/movies-table/movies-table.component\";\nimport Pagination from \"../../components/pagination/pagination.component\";\nimport {\n  useFetchMoviesData,\n  useMoviesData,\n  usePagination,\n} from \"../../redux/hooks\";\n\nconst App = () => {\n  const { currentPage, setCurrentPage } = usePagination();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const fetchMoviesData = useCallback(useFetchMoviesData(), []);\n  const { movies, moviesFetchError, isLoading, totalCountOfMovies } =\n    useMoviesData();\n  useEffect(() => {\n    fetchMoviesData(currentPage);\n  }, [currentPage, fetchMoviesData]);\n\n  if (moviesFetchError)\n    return (\n      <VStack spacing={2} padding=\"1rem\">\n        <Alert status=\"error\">\n          <AlertIcon />\n          There was an error fetching your movies. Try again later.\n        </Alert>\n      </VStack>\n    );\n  return (\n    <ErrorBoundary>\n      <Center width=\"100%\" minHeight=\"100vh\">\n        {isLoading === \"idle\" ? (\n          <Box width=\"100%\">\n            <MoviesTable movies={movies} />\n            <Pagination\n              currentPage={currentPage}\n              totalCountOfMovies={totalCountOfMovies}\n              handlePageChange={setCurrentPage}\n            />\n          </Box>\n        ) : (\n          <Spinner size=\"xl\" />\n        )}\n      </Center>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport moviesDataReducer from \"./movies-data/movies-data.slice\";\r\nimport moviesTableReducer from \"./movies-table/movies-table.slice\";\r\nimport paginationReducer from \"./pagination/pagination.slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    moviesData: moviesDataReducer,\r\n    pagination: paginationReducer,\r\n    moviesTable: moviesTableReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/App/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}