{"version":3,"sources":["components/error-boundary/error-boundary.component.tsx","components/movies-table/movies-table.component.tsx","components/pagination/pagination.component.tsx","constants.ts","utils/fetchMoviesData.ts","containers/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ErrorBoundary","props","state","hasError","this","bgColor","height","src","alt","maxWidth","textAlign","color","fontWeight","fontSize","children","error","React","Component","MoviesTable","movies","handleMoviesChange","useDisclosure","isOpen","onOpen","onClose","useMediaQuery","isGreaterThan920","useState","selectedMovie","setSelectedMovie","commentInputText","setCommentInputText","variant","minWidth","map","movie","index","borderTop","maxHeight","d","justifyContent","medium_cover_image","title","width","genres","join","synopsis","alignItems","onClick","handleCommentsShow","id","isCentered","spacing","overflowY","className","comments","comment","borderWidth","borderRadius","overflow","padding","content","Delete","cursor","commentId","updatedComments","filter","localStorage","setItem","toString","JSON","stringify","handleCommentDelete","length","placeholder","marginRight","value","onChange","event","target","colorScheme","mr","trim","Pagination","currentPage","totalCountOfMovies","handlePageChange","lastPage","Math","ceil","previousPage","nextPage","margin","fetchMoviesData","page","a","fetch","response","json","moviesJSON","status","Error","data","App","setMovies","isLoading","setIsLoading","setCurrentPage","setTotalCountOfMovies","setError","useEffect","then","moviesData","movie_count","parse","getItem","catch","finally","minHeight","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.995102ab.chunk.js","sourcesContent":["import { Image } from \"@chakra-ui/image\";\r\nimport { Box, Center, Text } from \"@chakra-ui/layout\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Center bgColor=\"#EFEDFA\" height=\"100vh\">\r\n          <Box>\r\n            <Image src=\"/error.png\" alt=\"Ice Cream\" maxWidth=\"25rem\" />\r\n            <Text\r\n              textAlign=\"center\"\r\n              color=\"#9b8875\"\r\n              fontWeight={600}\r\n              fontSize=\"1.5rem\"\r\n            >\r\n              An unexpected error occurred. We'll fix it soon.\r\n            </Text>\r\n          </Box>\r\n        </Center>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Flex, Text, VStack } from \"@chakra-ui/layout\";\r\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/table\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport { useState } from \"react\";\r\nimport Comment from \"../../interfaces/Comment\";\r\nimport Movie from \"../../interfaces/Movie\";\r\nimport \"./movies-table.styles.css\";\r\n\r\ninterface MoviesTableProps {\r\n  movies: Movie[];\r\n  handleMoviesChange: (movies: Movie[]) => void;\r\n}\r\n\r\nconst MoviesTable = ({ movies, handleMoviesChange }: MoviesTableProps) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [isGreaterThan920] = useMediaQuery(\"(min-width: 920px)\");\r\n  const [selectedMovie, setSelectedMovie] = useState(movies[0]);\r\n  const [commentInputText, setCommentInputText] = useState(\"\");\r\n  const handleCommentsShow = (movie: Movie) => {\r\n    setSelectedMovie(movie);\r\n    onOpen();\r\n  };\r\n  const handleCommentAdd = () => {\r\n    if (commentInputText.trim() === \"\") return;\r\n    let updatedComments: Comment[] = [];\r\n    handleMoviesChange(\r\n      movies.map((movie) => {\r\n        if (movie.id === selectedMovie.id) {\r\n          updatedComments = [\r\n            ...movie.comments,\r\n            {\r\n              id: (movie.comments[movie.comments.length - 1]?.id || 0) + 1,\r\n              content: commentInputText,\r\n            },\r\n          ];\r\n          return { ...movie, comments: updatedComments };\r\n        }\r\n        return movie;\r\n      })\r\n    );\r\n    localStorage.setItem(\r\n      selectedMovie.id.toString(),\r\n      JSON.stringify(updatedComments)\r\n    );\r\n    setCommentInputText(\"\");\r\n    onClose();\r\n  };\r\n  const handleCommentDelete = (commentId: number) => {\r\n    let updatedComments: Comment[] = [];\r\n    handleMoviesChange(\r\n      movies.map((movie) => {\r\n        if (movie.id === selectedMovie.id) {\r\n          updatedComments = movie.comments.filter((comment) => {\r\n            return comment.id !== commentId;\r\n          });\r\n          return { ...movie, comments: updatedComments };\r\n        }\r\n        return movie;\r\n      })\r\n    );\r\n    localStorage.setItem(\r\n      selectedMovie.id.toString(),\r\n      JSON.stringify(updatedComments)\r\n    );\r\n    onClose();\r\n  };\r\n  return (\r\n    <>\r\n      <Table variant=\"simple\">\r\n        {isGreaterThan920 && (\r\n          <Thead>\r\n            <Tr>\r\n              <Th minWidth=\"16rem\">Poster</Th>\r\n              <Th minWidth=\"10rem\">Title</Th>\r\n              <Th>Genres</Th>\r\n              <Th minWidth=\"13rem\">Synopsis</Th>\r\n              <Th>Comments</Th>\r\n            </Tr>\r\n          </Thead>\r\n        )}\r\n        <Tbody>\r\n          {movies.map((movie, index) => {\r\n            return (\r\n              <Tr\r\n                key={movie.id}\r\n                borderTop={index !== 0 ? \"1px solid #7b7b7b\" : \"none\"}\r\n              >\r\n                <Td\r\n                  maxHeight=\"19rem\"\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Poster</Text>}\r\n                  <Image\r\n                    src={movie.medium_cover_image}\r\n                    alt={movie.title}\r\n                    width=\"11rem\"\r\n                  />\r\n                </Td>\r\n                <Td\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Title</Text>}\r\n                  <Text>{movie.title}</Text>\r\n                </Td>\r\n                <Td\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Genres</Text>}\r\n                  <Text maxWidth={isGreaterThan920 ? \"100%\" : \"70%\"}>\r\n                    {movie.genres.join(\", \")}\r\n                  </Text>\r\n                </Td>\r\n                <Td\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Synopsis</Text>}\r\n                  <Text\r\n                    maxWidth={isGreaterThan920 ? \"90%\" : \"70%\"}\r\n                    textAlign=\"justify\"\r\n                  >\r\n                    {movie.synopsis}\r\n                  </Text>\r\n                </Td>\r\n                <Td\r\n                  d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  {!isGreaterThan920 && <Text fontWeight={600}>Comments</Text>}\r\n                  <Button onClick={() => handleCommentsShow(movie)}>\r\n                    Show\r\n                  </Button>\r\n                </Td>\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Comments</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <VStack\r\n              spacing={2}\r\n              maxHeight=\"60vh\"\r\n              overflowY=\"scroll\"\r\n              className=\"scroll-stack\"\r\n            >\r\n              {selectedMovie?.comments.map((comment) => {\r\n                return (\r\n                  <Flex\r\n                    key={comment.id}\r\n                    borderWidth=\"1px\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"hidden\"\r\n                    padding=\"1rem\"\r\n                    width=\"95%\"\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Text>{comment.content}</Text>\r\n                    <DeleteIcon\r\n                      cursor=\"pointer\"\r\n                      onClick={() => handleCommentDelete(comment.id)}\r\n                    />\r\n                  </Flex>\r\n                );\r\n              })}\r\n            </VStack>\r\n            {selectedMovie?.comments.length === 0 && (\r\n              <Text textAlign=\"center\">Comment first!</Text>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Textarea\r\n              placeholder=\"Type your comment here...\"\r\n              marginRight=\"1rem\"\r\n              value={commentInputText}\r\n              onChange={(event) => setCommentInputText(event.target.value)}\r\n            />\r\n            <Button colorScheme=\"teal\" mr={3} onClick={handleCommentAdd}>\r\n              Send\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesTable;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { HStack } from \"@chakra-ui/layout\";\r\nimport { ROWS_IN_PAGE_LIMIT } from \"../../constants\";\r\n\r\ninterface PaginationProps {\r\n  currentPage: number;\r\n  totalCountOfMovies: number;\r\n  handlePageChange: (page: number) => void;\r\n}\r\n\r\nconst Pagination = ({\r\n  currentPage,\r\n  totalCountOfMovies,\r\n  handlePageChange,\r\n}: PaginationProps) => {\r\n  const FIRST_PAGE = 1;\r\n  const lastPage = Math.ceil(totalCountOfMovies / ROWS_IN_PAGE_LIMIT);\r\n  const previousPage = currentPage - 1;\r\n  const nextPage = currentPage + 1;\r\n  return (\r\n    <HStack spacing={2} margin=\"0.5rem\">\r\n      {currentPage > 1 && (\r\n        <Button onClick={() => handlePageChange(FIRST_PAGE)}>\r\n          {FIRST_PAGE}\r\n        </Button>\r\n      )}\r\n      {currentPage > 2 && (\r\n        <Button onClick={() => handlePageChange(previousPage)}>\r\n          {previousPage}\r\n        </Button>\r\n      )}\r\n      <Button onClick={() => handlePageChange(currentPage)} colorScheme=\"teal\">\r\n        {currentPage}\r\n      </Button>\r\n      {currentPage < lastPage - 1 && (\r\n        <Button onClick={() => handlePageChange(nextPage)}>{nextPage}</Button>\r\n      )}\r\n      {currentPage < lastPage && (\r\n        <Button onClick={() => handlePageChange(lastPage)}>{lastPage}</Button>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const ROWS_IN_PAGE_LIMIT = 10;\r\n","import { ROWS_IN_PAGE_LIMIT } from \"../constants\";\r\n\r\nconst fetchMoviesData = async (page: number) => {\r\n  const response = await fetch(\r\n    `https://yts.mx/api/v2/list_movies.json?limit=${ROWS_IN_PAGE_LIMIT}&page=${page}`\r\n  );\r\n  const moviesJSON = await response.json();\r\n  if (moviesJSON.status !== \"ok\")\r\n    throw new Error(\"Error occured while movies was fetched.\");\r\n  return moviesJSON.data;\r\n};\r\n\r\nexport default fetchMoviesData;\r\n","import { Alert, AlertIcon } from \"@chakra-ui/alert\";\nimport { Box, Center, VStack } from \"@chakra-ui/layout\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { useEffect, useState } from \"react\";\nimport ErrorBoundary from \"../../components/error-boundary/error-boundary.component\";\nimport MoviesTable from \"../../components/movies-table/movies-table.component\";\nimport Pagination from \"../../components/pagination/pagination.component\";\nimport Movie from \"../../interfaces/Movie\";\nimport MovieWithoutComments from \"../../interfaces/MovieWithoutComments\";\nimport fetchMoviesData from \"../../utils/fetchMoviesData\";\n\nconst App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalCountOfMovies, setTotalCountOfMovies] = useState(0);\n  const [error, setError] = useState();\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMoviesData(currentPage)\n      .then((moviesData) => {\n        setTotalCountOfMovies(moviesData.movie_count);\n        setMovies(\n          moviesData.movies.map((movie: MovieWithoutComments) => {\n            const comments = JSON.parse(\n              localStorage.getItem(movie.id.toString()) || \"[]\"\n            );\n            return { ...movie, comments };\n          })\n        );\n      })\n      .catch((error) => {\n        setError(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, [currentPage]);\n  if (error)\n    return (\n      <VStack spacing={2} padding=\"1rem\">\n        <Alert status=\"error\">\n          <AlertIcon />\n          There was an error fetching your movies. Try again later.\n        </Alert>\n      </VStack>\n    );\n  return (\n    <ErrorBoundary>\n      <Center width=\"100%\" minHeight=\"100vh\">\n        {!isLoading ? (\n          <Box width=\"100%\">\n            <MoviesTable movies={movies} handleMoviesChange={setMovies} />\n            <Pagination\n              currentPage={currentPage}\n              totalCountOfMovies={totalCountOfMovies}\n              handlePageChange={setCurrentPage}\n            />\n          </Box>\n        ) : (\n          <Spinner size=\"xl\" />\n        )}\n      </Center>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}