{"version":3,"sources":["components/error-alert/error-alert.component.tsx","redux/movies-data/movies-data.slice.ts","constants.ts","redux/movies-table/movies-table.slice.ts","redux/pagination/pagination.slice.ts","redux/hooks.ts","containers/comments/comments.container.tsx","components/comment-card/comment-card.component.tsx","components/comment-form/comment-form.component.tsx","components/comments-modal/comments-modal.component.tsx","components/movie-cell-text/movie-cell-text.components.tsx","components/movie-cell/movie-cell.component.tsx","components/movie-row/movie-row.component.tsx","components/table-head/table-head.component.tsx","components/movies-table/movies-table.component.tsx","components/pagination/pagination.component.tsx","containers/error-boundary/error-boundary.container.tsx","containers/errors/errors.container.tsx","containers/page-container/page-container.container.tsx","containers/page-content/page-content.container.tsx","containers/App/App.container.tsx","redux/store.ts","reportWebVitals.ts","index.tsx"],"names":["ErrorAlert","children","status","fetchMoviesData","createAsyncThunk","page","thunkAPI","a","fetch","response","json","moviesJSON","rejectWithValue","Error","data","moviesSlice","createSlice","name","initialState","movies","isLoading","totalCountOfMovies","reducers","appendComment","state","action","payload","movieId","content","movie","find","id","comments","push","length","localStorage","setItem","toString","JSON","stringify","deleteComment","commentId","filter","comment","extraReducers","builder","addCase","fulfilled","map","parse","getItem","movie_count","rejected","error","pending","actions","moviesTableSlice","selectedMovieId","commentInputText","changeSelectedMovieId","changeCommentInputText","paginationSlice","currentPage","changeCurrentPage","useAppDispatch","useDispatch","useAppSelector","useSelector","useMoviesData","dispatch","moviesData","moviesFetchError","addComment","removeComment","fetchMovies","usePagination","pagination","setCurrentPage","useMoviesTable","moviesTable","setSelectedMovieId","setCommentInputText","text","Comments","spacing","maxHeight","overflowY","className","CommentCard","onCommentRemove","borderWidth","borderRadius","overflow","padding","width","justifyContent","alignItems","Delete","cursor","onClick","focusable","CommentForm","onCommentAdd","placeholder","marginRight","value","onChange","event","target","colorScheme","mr","isDisabled","trim","CommentsModal","selectedMovie","isOpen","onClose","isCentered","textAlign","MovieCellText","styleProps","useMediaQuery","isGreaterThan920","maxWidth","MovieCell","d","MovieRow","index","onCommentShow","useState","isImageLoaded","setIsImageLoaded","borderTop","fontWeight","height","isLoaded","src","medium_cover_image","alt","title","onLoad","genres","join","synopsis","TableHead","minWidth","MoviesTable","useDisclosure","onOpen","useMemo","variant","Pagination","lastPage","Math","ceil","previousPage","nextPage","margin","ArrowBack","ArrowForward","ErrorBoundary","props","hasError","this","bgColor","color","fontSize","React","Component","Errors","PageContainer","minHeight","PageContent","App","useFetchMoviesData","useEffect","size","store","configureStore","reducer","moviesDataReducer","paginationReducer","moviesTableReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1699e365.chunk.js","sourcesContent":["import { Alert, AlertIcon } from \"@chakra-ui/alert\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface ErrorAlertProps {\r\n  children: ReactNode[] | ReactNode | string;\r\n}\r\n\r\nconst ErrorAlert = ({ children }: ErrorAlertProps) => {\r\n  return (\r\n    <Alert status=\"error\">\r\n      <AlertIcon />\r\n      {children}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorAlert;\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { ROWS_IN_PAGE_LIMIT } from \"../../constants\";\r\nimport Movie from \"../../interfaces/Movie\";\r\nimport MovieWithoutComments from \"../../interfaces/MovieWithoutComments\";\r\n\r\nexport interface MoviesDataState {\r\n  movies: Movie[];\r\n  isLoading: \"idle\" | \"loading\";\r\n  totalCountOfMovies: number;\r\n  error?: Error;\r\n}\r\n\r\nconst initialState: MoviesDataState = {\r\n  movies: [],\r\n  isLoading: \"idle\",\r\n  totalCountOfMovies: 0,\r\n};\r\n\r\ninterface MoviesData {\r\n  movie_count: number;\r\n  movies: MovieWithoutComments[];\r\n}\r\n\r\nexport const fetchMoviesData = createAsyncThunk<\r\n  MoviesData,\r\n  number,\r\n  { rejectValue: Error }\r\n>(\"moviesData/fetchMoviesDataStatus\", async (page: number, thunkAPI) => {\r\n  const response = await fetch(\r\n    `https://yts.mx/api/v2/list_movies.json?limit=${ROWS_IN_PAGE_LIMIT}&page=${page}`\r\n  );\r\n  const moviesJSON = await response.json();\r\n  if (moviesJSON.status !== \"ok\")\r\n    return thunkAPI.rejectWithValue(\r\n      new Error(\"Error occured while movies was fetched.\")\r\n    );\r\n  return moviesJSON.data as MoviesData;\r\n});\r\n\r\nconst moviesSlice = createSlice({\r\n  name: \"moviesData\",\r\n  initialState,\r\n  reducers: {\r\n    appendComment: (\r\n      state,\r\n      action: PayloadAction<{ movieId: number; content: string }>\r\n    ) => {\r\n      const { movieId, content } = action.payload;\r\n      const movie = state.movies.find((movie) => movie.id === movieId);\r\n      if (!movie) return;\r\n      movie.comments.push({\r\n        id: (movie.comments[movie.comments.length - 1]?.id || 0) + 1,\r\n        content,\r\n      });\r\n      localStorage.setItem(movieId.toString(), JSON.stringify(movie.comments));\r\n    },\r\n    deleteComment: (\r\n      state,\r\n      action: PayloadAction<{ movieId: number; commentId: number }>\r\n    ) => {\r\n      const { movieId, commentId } = action.payload;\r\n      const movie = state.movies.find((movie) => movie.id === movieId);\r\n      if (!movie) return;\r\n      movie.comments = movie.comments.filter(\r\n        (comment) => comment.id !== commentId\r\n      );\r\n      localStorage.setItem(movieId.toString(), JSON.stringify(movie.comments));\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchMoviesData.fulfilled, (state, { payload }) => {\r\n      state.isLoading = \"idle\";\r\n      state.movies = payload.movies.map((movie) => {\r\n        const comments = JSON.parse(\r\n          localStorage.getItem(movie.id.toString()) || \"[]\"\r\n        );\r\n        return { ...movie, comments };\r\n      });\r\n      state.totalCountOfMovies = payload.movie_count;\r\n    });\r\n\r\n    builder.addCase(fetchMoviesData.rejected, (state, { payload }) => {\r\n      state.isLoading = \"idle\";\r\n      state.error = payload;\r\n    });\r\n\r\n    builder.addCase(fetchMoviesData.pending, (state) => {\r\n      state.isLoading = \"loading\";\r\n    });\r\n  },\r\n});\r\n\r\nexport const { appendComment, deleteComment } = moviesSlice.actions;\r\nexport default moviesSlice.reducer;\r\n","export const ROWS_IN_PAGE_LIMIT = 5;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface MoviesTableState {\r\n  selectedMovieId: number;\r\n  commentInputText: string;\r\n}\r\n\r\nconst initialState: MoviesTableState = {\r\n  selectedMovieId: -1,\r\n  commentInputText: \"\",\r\n};\r\n\r\nconst moviesTableSlice = createSlice({\r\n  name: \"moviesTable\",\r\n  initialState,\r\n  reducers: {\r\n    changeSelectedMovieId: (state, action: PayloadAction<number>) => {\r\n      state.selectedMovieId = action.payload;\r\n    },\r\n    changeCommentInputText: (state, action: PayloadAction<string>) => {\r\n      state.commentInputText = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeSelectedMovieId, changeCommentInputText } =\r\n  moviesTableSlice.actions;\r\nexport default moviesTableSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface PaginationState {\r\n  currentPage: number;\r\n}\r\n\r\nconst initialState: PaginationState = {\r\n  currentPage: 1,\r\n};\r\n\r\nconst paginationSlice = createSlice({\r\n  name: \"pagination\",\r\n  initialState,\r\n  reducers: {\r\n    changeCurrentPage: (state, action: PayloadAction<number>) => {\r\n      state.currentPage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeCurrentPage } = paginationSlice.actions;\r\nexport default paginationSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  appendComment,\r\n  deleteComment,\r\n  fetchMoviesData,\r\n} from \"./movies-data/movies-data.slice\";\r\nimport {\r\n  changeCommentInputText,\r\n  changeSelectedMovieId,\r\n} from \"./movies-table/movies-table.slice\";\r\nimport { changeCurrentPage } from \"./pagination/pagination.slice\";\r\nimport { AppDispatch, RootState } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport const useMoviesData = () => {\r\n  const dispatch = useAppDispatch();\r\n  const movies = useAppSelector((state) => state.moviesData.movies);\r\n  const isLoading = useAppSelector((state) => state.moviesData.isLoading);\r\n  const totalCountOfMovies = useAppSelector(\r\n    (state) => state.moviesData.totalCountOfMovies\r\n  );\r\n  const moviesFetchError = useAppSelector((state) => state.moviesData.error);\r\n\r\n  const addComment = (movieId: number, content: string) => {\r\n    dispatch(appendComment({ movieId, content }));\r\n  };\r\n\r\n  const removeComment = (movieId: number, commentId: number) => {\r\n    dispatch(deleteComment({ movieId, commentId }));\r\n  };\r\n\r\n  return {\r\n    movies,\r\n    isLoading,\r\n    totalCountOfMovies,\r\n    moviesFetchError,\r\n    addComment,\r\n    removeComment,\r\n  };\r\n};\r\n\r\nlet fetchMovies: ((page: number) => Promise<void>) | null = null;\r\n\r\nexport const useFetchMoviesData = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (fetchMovies) return fetchMovies;\r\n\r\n  fetchMovies = async (page: number) => {\r\n    await dispatch(fetchMoviesData(page));\r\n  };\r\n\r\n  return fetchMovies;\r\n};\r\n\r\nexport const usePagination = () => {\r\n  const dispatch = useAppDispatch();\r\n  const currentPage = useAppSelector((state) => state.pagination.currentPage);\r\n\r\n  const setCurrentPage = (page: number) => {\r\n    dispatch(changeCurrentPage(page));\r\n  };\r\n\r\n  return {\r\n    currentPage,\r\n    setCurrentPage,\r\n  };\r\n};\r\n\r\nexport const useMoviesTable = () => {\r\n  const dispatch = useAppDispatch();\r\n  const selectedMovieId = useAppSelector(\r\n    (state) => state.moviesTable.selectedMovieId\r\n  );\r\n  const commentInputText = useAppSelector(\r\n    (state) => state.moviesTable.commentInputText\r\n  );\r\n\r\n  const setSelectedMovieId = (id: number) => {\r\n    dispatch(changeSelectedMovieId(id));\r\n  };\r\n\r\n  const setCommentInputText = (text: string) => {\r\n    dispatch(changeCommentInputText(text));\r\n  };\r\n\r\n  return {\r\n    selectedMovieId,\r\n    commentInputText,\r\n    setSelectedMovieId,\r\n    setCommentInputText,\r\n  };\r\n};\r\n","import { VStack } from \"@chakra-ui/layout\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface CommentsProps {\r\n  children: ReactNode[] | ReactNode;\r\n}\r\n\r\nconst Comments = ({ children }: CommentsProps) => {\r\n  return (\r\n    <VStack\r\n      spacing={2}\r\n      maxHeight=\"60vh\"\r\n      overflowY=\"scroll\"\r\n      className=\"scroll-stack\"\r\n    >\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport { Flex, Text } from \"@chakra-ui/layout\";\r\nimport Comment from \"../../interfaces/Comment\";\r\n\r\ninterface CommentCardProps {\r\n  comment: Comment;\r\n  onCommentRemove: (commentId: number) => void;\r\n}\r\n\r\nconst CommentCard = ({ comment, onCommentRemove }: CommentCardProps) => {\r\n  return (\r\n    <Flex\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      overflow=\"hidden\"\r\n      padding=\"1rem\"\r\n      width=\"95%\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Text>{comment.content}</Text>\r\n      <DeleteIcon\r\n        cursor=\"pointer\"\r\n        onClick={() => onCommentRemove(comment.id)}\r\n        focusable\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport { useMoviesTable } from \"../../redux/hooks\";\r\n\r\ninterface CommentFormProps {\r\n  onCommentAdd: () => void;\r\n}\r\n\r\nconst CommentForm = ({ onCommentAdd }: CommentFormProps) => {\r\n  const { commentInputText, setCommentInputText } = useMoviesTable();\r\n  return (\r\n    <>\r\n      <Textarea\r\n        placeholder=\"Type your comment here...\"\r\n        marginRight=\"1rem\"\r\n        value={commentInputText}\r\n        onChange={(event) => setCommentInputText(event.target.value)}\r\n      />\r\n      <Button\r\n        colorScheme=\"teal\"\r\n        mr={3}\r\n        onClick={onCommentAdd}\r\n        isDisabled={commentInputText.trim() === \"\"}\r\n      >\r\n        Send\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import { Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport Comments from \"../../containers/comments/comments.container\";\r\nimport Movie from \"../../interfaces/Movie\";\r\nimport CommentCard from \"../comment-card/comment-card.component\";\r\nimport CommentForm from \"../comment-form/comment-form.component\";\r\n\r\ninterface CommentsModalProps {\r\n  selectedMovie?: Movie;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onCommentAdd: () => void;\r\n  onCommentRemove: (commentId: number) => void;\r\n}\r\n\r\nconst CommentsModal = ({\r\n  selectedMovie,\r\n  isOpen,\r\n  onClose,\r\n  onCommentAdd,\r\n  onCommentRemove,\r\n}: CommentsModalProps) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Comments</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Comments>\r\n            {selectedMovie?.comments.map((comment) => {\r\n              return (\r\n                <CommentCard\r\n                  key={comment.id}\r\n                  comment={comment}\r\n                  onCommentRemove={onCommentRemove}\r\n                />\r\n              );\r\n            })}\r\n          </Comments>\r\n          {selectedMovie?.comments.length === 0 && (\r\n            <Text textAlign=\"center\">Comment first!</Text>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <CommentForm onCommentAdd={onCommentAdd} />\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CommentsModal;\r\n","import { Text } from \"@chakra-ui/layout\";\r\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\r\n\r\ninterface MovieCellTextProps {\r\n  children: string;\r\n  [stylePropName: string]: any;\r\n}\r\n\r\nconst MovieCellText = ({ children, ...styleProps }: MovieCellTextProps) => {\r\n  const [isGreaterThan920] = useMediaQuery(\"(min-width: 920px)\");\r\n  return (\r\n    <Text maxWidth={isGreaterThan920 ? \"100%\" : \"70%\"} {...styleProps}>\r\n      {children}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default MovieCellText;\r\n","import { useMediaQuery } from \"@chakra-ui/media-query\";\r\nimport { Td } from \"@chakra-ui/table\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface MovieCellProps {\r\n  children: ReactNode | ReactNode[];\r\n  [stylePropName: string]: any;\r\n}\r\n\r\nconst MovieCell = ({ children, ...styleProps }: MovieCellProps) => {\r\n  const [isGreaterThan920] = useMediaQuery(\"(min-width: 920px)\");\r\n  return (\r\n    <Td\r\n      d={!isGreaterThan920 ? \"flex\" : \"table-cell\"}\r\n      justifyContent=\"space-between\"\r\n      {...styleProps}\r\n    >\r\n      {children}\r\n    </Td>\r\n  );\r\n};\r\n\r\nexport default MovieCell;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Text } from \"@chakra-ui/layout\";\r\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\nimport { Tr } from \"@chakra-ui/table\";\r\nimport { useState } from \"react\";\r\nimport Movie from \"../../interfaces/Movie\";\r\nimport MovieCellText from \"../movie-cell-text/movie-cell-text.components\";\r\nimport MovieCell from \"../movie-cell/movie-cell.component\";\r\n\r\ninterface MovieRowProps {\r\n  index: number;\r\n  movie: Movie;\r\n  onCommentShow: (id: number) => void;\r\n}\r\n\r\nconst MovieRow = ({ index, movie, onCommentShow }: MovieRowProps) => {\r\n  const [isGreaterThan920] = useMediaQuery(\"(min-width: 920px)\");\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n  return (\r\n    <Tr borderTop={index !== 0 ? \"1px solid #7b7b7b\" : \"none\"}>\r\n      <MovieCell maxHeight=\"19rem\">\r\n        {!isGreaterThan920 && <Text fontWeight={600}>Poster</Text>}\r\n        <Skeleton width=\"10rem\" height=\"16rem\" isLoaded={isImageLoaded}>\r\n          <Image\r\n            src={movie.medium_cover_image}\r\n            alt={movie.title}\r\n            width=\"11rem\"\r\n            onLoad={() => setIsImageLoaded(true)}\r\n          />\r\n        </Skeleton>\r\n      </MovieCell>\r\n      <MovieCell>\r\n        {!isGreaterThan920 && <Text fontWeight={600}>Title</Text>}\r\n        <MovieCellText>{movie.title}</MovieCellText>\r\n      </MovieCell>\r\n      <MovieCell>\r\n        {!isGreaterThan920 && <Text fontWeight={600}>Genres</Text>}\r\n        <MovieCellText>{movie.genres.join(\", \")}</MovieCellText>\r\n      </MovieCell>\r\n      <MovieCell>\r\n        {!isGreaterThan920 && <Text fontWeight={600}>Synopsis</Text>}\r\n        <MovieCellText textAlign=\"justify\">{movie.synopsis}</MovieCellText>\r\n      </MovieCell>\r\n      <MovieCell alignItems=\"center\">\r\n        {!isGreaterThan920 && <Text fontWeight={600}>Comments</Text>}\r\n        <Button onClick={() => onCommentShow(movie.id)}>Show</Button>\r\n      </MovieCell>\r\n    </Tr>\r\n  );\r\n};\r\n\r\nexport default MovieRow;\r\n","import { Th, Thead, Tr } from \"@chakra-ui/table\";\r\n\r\nconst TableHead = () => {\r\n  return (\r\n    <Thead>\r\n      <Tr>\r\n        <Th minWidth=\"16rem\">Poster</Th>\r\n        <Th minWidth=\"10rem\">Title</Th>\r\n        <Th>Genres</Th>\r\n        <Th minWidth=\"13rem\">Synopsis</Th>\r\n        <Th>Comments</Th>\r\n      </Tr>\r\n    </Thead>\r\n  );\r\n};\r\n\r\nexport default TableHead;\r\n","import { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\r\nimport { Table, Tbody } from \"@chakra-ui/table\";\r\nimport { useMemo } from \"react\";\r\nimport Movie from \"../../interfaces/Movie\";\r\nimport { useMoviesData, useMoviesTable } from \"../../redux/hooks\";\r\nimport CommentsModal from \"../comments-modal/comments-modal.component\";\r\nimport MovieRow from \"../movie-row/movie-row.component\";\r\nimport TableHead from \"../table-head/table-head.component\";\r\nimport \"./movies-table.styles.css\";\r\n\r\ninterface MoviesTableProps {\r\n  movies: Movie[];\r\n}\r\n\r\nconst MoviesTable = ({ movies }: MoviesTableProps) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [isGreaterThan920] = useMediaQuery(\"(min-width: 920px)\");\r\n  const { addComment, removeComment } = useMoviesData();\r\n\r\n  const {\r\n    selectedMovieId,\r\n    setSelectedMovieId,\r\n    commentInputText,\r\n    setCommentInputText,\r\n  } = useMoviesTable();\r\n\r\n  const selectedMovie = useMemo(\r\n    () => movies.find((movie) => movie.id === selectedMovieId),\r\n    [selectedMovieId, movies]\r\n  );\r\n\r\n  const onCommentShow = (id: number) => {\r\n    setSelectedMovieId(id);\r\n    onOpen();\r\n  };\r\n\r\n  const onCommentAdd = () => {\r\n    if (commentInputText.trim() === \"\") return;\r\n    addComment(selectedMovieId, commentInputText);\r\n    setCommentInputText(\"\");\r\n  };\r\n\r\n  const onCommentRemove = (commentId: number) => {\r\n    removeComment(selectedMovieId, commentId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table variant=\"simple\">\r\n        {isGreaterThan920 && <TableHead />}\r\n        <Tbody>\r\n          {movies.map((movie, index) => {\r\n            return (\r\n              <MovieRow\r\n                key={movie.id}\r\n                movie={movie}\r\n                index={index}\r\n                onCommentShow={onCommentShow}\r\n              />\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n      <CommentsModal\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        selectedMovie={selectedMovie}\r\n        onCommentAdd={onCommentAdd}\r\n        onCommentRemove={onCommentRemove}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesTable;\r\n","import { ArrowBackIcon, ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { Button, HStack } from \"@chakra-ui/react\";\r\nimport { ROWS_IN_PAGE_LIMIT } from \"../../constants\";\r\nimport { usePagination } from \"../../redux/hooks\";\r\n\r\ninterface PaginationProps {\r\n  totalCountOfMovies: number;\r\n}\r\n\r\nconst Pagination = ({ totalCountOfMovies }: PaginationProps) => {\r\n  const { currentPage, setCurrentPage } = usePagination();\r\n  const FIRST_PAGE = 1;\r\n  const lastPage = Math.ceil(totalCountOfMovies / ROWS_IN_PAGE_LIMIT);\r\n  const previousPage = currentPage - 1;\r\n  const nextPage = currentPage + 1;\r\n  return (\r\n    <HStack spacing={2} margin=\"0.5rem\" maxWidth=\"100vw\" overflow=\"hidden\">\r\n      <Button onClick={() => currentPage > 1 && setCurrentPage(previousPage)}>\r\n        <ArrowBackIcon />\r\n      </Button>\r\n      {currentPage > 1 && (\r\n        <Button onClick={() => setCurrentPage(FIRST_PAGE)}>{FIRST_PAGE}</Button>\r\n      )}\r\n      {currentPage > 2 && (\r\n        <Button onClick={() => setCurrentPage(previousPage)}>\r\n          {previousPage}\r\n        </Button>\r\n      )}\r\n      <Button onClick={() => setCurrentPage(currentPage)} colorScheme=\"teal\">\r\n        {currentPage}\r\n      </Button>\r\n      {currentPage < lastPage - 1 && (\r\n        <Button onClick={() => setCurrentPage(nextPage)}>{nextPage}</Button>\r\n      )}\r\n      {currentPage < lastPage && (\r\n        <Button onClick={() => setCurrentPage(lastPage)}>{lastPage}</Button>\r\n      )}\r\n      <Button\r\n        onClick={() => currentPage < lastPage - 1 && setCurrentPage(nextPage)}\r\n      >\r\n        <ArrowForwardIcon />\r\n      </Button>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { Image } from \"@chakra-ui/image\";\r\nimport { Box, Center, Text } from \"@chakra-ui/layout\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Center bgColor=\"#EFEDFA\" height=\"100vh\">\r\n          <Box>\r\n            <Image\r\n              src=\"%PUBLIC_URL%/error.png\"\r\n              alt=\"Ice Cream\"\r\n              maxWidth=\"25rem\"\r\n            />\r\n            <Text\r\n              textAlign=\"center\"\r\n              color=\"#9b8875\"\r\n              fontWeight={600}\r\n              fontSize=\"1.5rem\"\r\n            >\r\n              An unexpected error occurred. We'll fix it soon.\r\n            </Text>\r\n          </Box>\r\n        </Center>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { VStack } from \"@chakra-ui/layout\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface ErrorsProps {\r\n  children: ReactNode[] | ReactNode;\r\n}\r\n\r\nconst Errors = ({ children }: ErrorsProps) => {\r\n  return (\r\n    <VStack spacing={2} padding=\"1rem\">\r\n      {children}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Errors;\r\n","import { Center } from \"@chakra-ui/layout\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface PageProps {\r\n  children: ReactNode[] | ReactNode;\r\n}\r\n\r\nconst PageContainer = ({ children }: PageProps) => {\r\n  return (\r\n    <Center width=\"100%\" minHeight=\"100vh\" className=\"page-container\">\r\n      {children}\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { ReactNode } from \"react\";\r\n\r\ninterface PageContentProps {\r\n  children: ReactNode[] | ReactNode;\r\n}\r\n\r\nconst PageContent = ({ children }: PageContentProps) => {\r\n  return <Box width=\"100%\">{children}</Box>;\r\n};\r\n\r\nexport default PageContent;\r\n","import { Spinner } from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport ErrorAlert from \"../../components/error-alert/error-alert.component\";\nimport MoviesTable from \"../../components/movies-table/movies-table.component\";\nimport Pagination from \"../../components/pagination/pagination.component\";\nimport {\n  useFetchMoviesData,\n  useMoviesData,\n  usePagination,\n} from \"../../redux/hooks\";\nimport ErrorBoundary from \"../error-boundary/error-boundary.container\";\nimport Errors from \"../errors/errors.container\";\nimport PageContainer from \"../page-container/page-container.container\";\nimport PageContent from \"../page-content/page-content.container\";\n\nconst App = () => {\n  const { currentPage } = usePagination();\n  const fetchMoviesData = useFetchMoviesData();\n  const { movies, moviesFetchError, isLoading, totalCountOfMovies } =\n    useMoviesData();\n\n  useEffect(() => {\n    fetchMoviesData(currentPage);\n  }, [currentPage, fetchMoviesData]);\n\n  if (moviesFetchError)\n    return (\n      <Errors>\n        <ErrorAlert>\n          There was an error fetching your movies. Try again later.\n        </ErrorAlert>\n      </Errors>\n    );\n\n  return (\n    <ErrorBoundary>\n      <PageContainer>\n        {isLoading === \"idle\" ? (\n          <PageContent>\n            <MoviesTable movies={movies} />\n            <Pagination totalCountOfMovies={totalCountOfMovies} />\n          </PageContent>\n        ) : (\n          <Spinner size=\"xl\" />\n        )}\n      </PageContainer>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport moviesDataReducer from \"./movies-data/movies-data.slice\";\r\nimport moviesTableReducer from \"./movies-table/movies-table.slice\";\r\nimport paginationReducer from \"./pagination/pagination.slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    moviesData: moviesDataReducer,\r\n    pagination: paginationReducer,\r\n    moviesTable: moviesTableReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/App/App.container\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}